{"remainingRequest":"/Users/karlkoch/GitHub/lazy-pdf-website/node_modules/thread-loader/dist/cjs.js!/Users/karlkoch/GitHub/lazy-pdf-website/node_modules/babel-loader/lib/index.js!/Users/karlkoch/GitHub/lazy-pdf-website/node_modules/vuetify/lib/components/VCarousel/VCarousel.js","dependencies":[{"path":"/Users/karlkoch/GitHub/lazy-pdf-website/node_modules/vuetify/lib/components/VCarousel/VCarousel.js","mtime":1585839637415},{"path":"/Users/karlkoch/GitHub/lazy-pdf-website/node_modules/cache-loader/dist/cjs.js","mtime":1583312604768},{"path":"/Users/karlkoch/GitHub/lazy-pdf-website/node_modules/thread-loader/dist/cjs.js","mtime":1583312604800},{"path":"/Users/karlkoch/GitHub/lazy-pdf-website/node_modules/babel-loader/lib/index.js","mtime":1585087070436}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yIjsKaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL2thcmxrb2NoL0dpdEh1Yi9sYXp5LXBkZi13ZWJzaXRlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKLy8gU3R5bGVzCmltcG9ydCAiLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvVkNhcm91c2VsL1ZDYXJvdXNlbC5zYXNzIjsgLy8gRXh0ZW5zaW9ucwoKaW1wb3J0IFZXaW5kb3cgZnJvbSAnLi4vVldpbmRvdy9WV2luZG93JzsgLy8gQ29tcG9uZW50cwoKaW1wb3J0IFZCdG4gZnJvbSAnLi4vVkJ0bic7CmltcG9ydCBWSWNvbiBmcm9tICcuLi9WSWNvbic7CmltcG9ydCBWUHJvZ3Jlc3NMaW5lYXIgZnJvbSAnLi4vVlByb2dyZXNzTGluZWFyJzsgLy8gTWl4aW5zCi8vIFRPRE86IE1vdmUgdGhpcyBpbnRvIGNvcmUgY29tcG9uZW50cyB2Mi4wCgppbXBvcnQgQnV0dG9uR3JvdXAgZnJvbSAnLi4vLi4vbWl4aW5zL2J1dHRvbi1ncm91cCc7IC8vIFV0aWxpdGllcwoKaW1wb3J0IHsgY29udmVydFRvVW5pdCB9IGZyb20gJy4uLy4uL3V0aWwvaGVscGVycyc7CmltcG9ydCB7IGJyZWFraW5nIH0gZnJvbSAnLi4vLi4vdXRpbC9jb25zb2xlJzsKZXhwb3J0IGRlZmF1bHQgVldpbmRvdy5leHRlbmQoewogIG5hbWU6ICd2LWNhcm91c2VsJywKICBwcm9wczogewogICAgY29udGludW91czogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiB0cnVlCiAgICB9LAogICAgY3ljbGU6IEJvb2xlYW4sCiAgICBkZWxpbWl0ZXJJY29uOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJyRkZWxpbWl0ZXInCiAgICB9LAogICAgaGVpZ2h0OiB7CiAgICAgIHR5cGU6IFtOdW1iZXIsIFN0cmluZ10sCiAgICAgIGRlZmF1bHQ6IDUwMAogICAgfSwKICAgIGhpZGVEZWxpbWl0ZXJzOiBCb29sZWFuLAogICAgaGlkZURlbGltaXRlckJhY2tncm91bmQ6IEJvb2xlYW4sCiAgICBpbnRlcnZhbDogewogICAgICB0eXBlOiBbTnVtYmVyLCBTdHJpbmddLAogICAgICBkZWZhdWx0OiA2MDAwLAogICAgICB2YWxpZGF0b3I6IGZ1bmN0aW9uIHZhbGlkYXRvcih2YWx1ZSkgewogICAgICAgIHJldHVybiB2YWx1ZSA+IDA7CiAgICAgIH0KICAgIH0sCiAgICBtYW5kYXRvcnk6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogdHJ1ZQogICAgfSwKICAgIHByb2dyZXNzOiBCb29sZWFuLAogICAgcHJvZ3Jlc3NDb2xvcjogU3RyaW5nLAogICAgc2hvd0Fycm93czogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiB0cnVlCiAgICB9LAogICAgdmVydGljYWxEZWxpbWl0ZXJzOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogdW5kZWZpbmVkCiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgaW50ZXJuYWxIZWlnaHQ6IHRoaXMuaGVpZ2h0LAogICAgICBzbGlkZVRpbWVvdXQ6IHVuZGVmaW5lZAogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBjbGFzc2VzOiBmdW5jdGlvbiBjbGFzc2VzKCkgewogICAgICByZXR1cm4gX29iamVjdFNwcmVhZCh7fSwgVldpbmRvdy5vcHRpb25zLmNvbXB1dGVkLmNsYXNzZXMuY2FsbCh0aGlzKSwgewogICAgICAgICd2LWNhcm91c2VsJzogdHJ1ZSwKICAgICAgICAndi1jYXJvdXNlbC0taGlkZS1kZWxpbWl0ZXItYmFja2dyb3VuZCc6IHRoaXMuaGlkZURlbGltaXRlckJhY2tncm91bmQsCiAgICAgICAgJ3YtY2Fyb3VzZWwtLXZlcnRpY2FsLWRlbGltaXRlcnMnOiB0aGlzLmlzVmVydGljYWwKICAgICAgfSk7CiAgICB9LAogICAgaXNEYXJrOiBmdW5jdGlvbiBpc0RhcmsoKSB7CiAgICAgIHJldHVybiB0aGlzLmRhcmsgfHwgIXRoaXMubGlnaHQ7CiAgICB9LAogICAgaXNWZXJ0aWNhbDogZnVuY3Rpb24gaXNWZXJ0aWNhbCgpIHsKICAgICAgcmV0dXJuIHRoaXMudmVydGljYWxEZWxpbWl0ZXJzICE9IG51bGw7CiAgICB9CiAgfSwKICB3YXRjaDogewogICAgaW50ZXJuYWxWYWx1ZTogJ3Jlc3RhcnRUaW1lb3V0JywKICAgIGludGVydmFsOiAncmVzdGFydFRpbWVvdXQnLAogICAgaGVpZ2h0OiBmdW5jdGlvbiBoZWlnaHQodmFsLCBvbGRWYWwpIHsKICAgICAgaWYgKHZhbCA9PT0gb2xkVmFsIHx8ICF2YWwpIHJldHVybjsKICAgICAgdGhpcy5pbnRlcm5hbEhlaWdodCA9IHZhbDsKICAgIH0sCiAgICBjeWNsZTogZnVuY3Rpb24gY3ljbGUodmFsKSB7CiAgICAgIGlmICh2YWwpIHsKICAgICAgICB0aGlzLnJlc3RhcnRUaW1lb3V0KCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgY2xlYXJUaW1lb3V0KHRoaXMuc2xpZGVUaW1lb3V0KTsKICAgICAgICB0aGlzLnNsaWRlVGltZW91dCA9IHVuZGVmaW5lZDsKICAgICAgfQogICAgfQogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovCiAgICBpZiAodGhpcy4kYXR0cnMuaGFzT3duUHJvcGVydHkoJ2hpZGUtY29udHJvbHMnKSkgewogICAgICBicmVha2luZygnaGlkZS1jb250cm9scycsICc6c2hvdy1hcnJvd3M9ImZhbHNlIicsIHRoaXMpOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuc3RhcnRUaW1lb3V0KCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZW5Db250cm9sSWNvbnM6IGZ1bmN0aW9uIGdlbkNvbnRyb2xJY29ucygpIHsKICAgICAgaWYgKHRoaXMuaXNWZXJ0aWNhbCkgcmV0dXJuIG51bGw7CiAgICAgIHJldHVybiBWV2luZG93Lm9wdGlvbnMubWV0aG9kcy5nZW5Db250cm9sSWNvbnMuY2FsbCh0aGlzKTsKICAgIH0sCiAgICBnZW5EZWxpbWl0ZXJzOiBmdW5jdGlvbiBnZW5EZWxpbWl0ZXJzKCkgewogICAgICByZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgnZGl2JywgewogICAgICAgIHN0YXRpY0NsYXNzOiAndi1jYXJvdXNlbF9fY29udHJvbHMnLAogICAgICAgIHN0eWxlOiB7CiAgICAgICAgICBsZWZ0OiB0aGlzLnZlcnRpY2FsRGVsaW1pdGVycyA9PT0gJ2xlZnQnICYmIHRoaXMuaXNWZXJ0aWNhbCA/IDAgOiAnYXV0bycsCiAgICAgICAgICByaWdodDogdGhpcy52ZXJ0aWNhbERlbGltaXRlcnMgPT09ICdyaWdodCcgPyAwIDogJ2F1dG8nCiAgICAgICAgfQogICAgICB9LCBbdGhpcy5nZW5JdGVtcygpXSk7CiAgICB9LAogICAgZ2VuSXRlbXM6IGZ1bmN0aW9uIGdlbkl0ZW1zKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdmFyIGxlbmd0aCA9IHRoaXMuaXRlbXMubGVuZ3RoOwogICAgICB2YXIgY2hpbGRyZW4gPSBbXTsKCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHsKICAgICAgICB2YXIgY2hpbGQgPSB0aGlzLiRjcmVhdGVFbGVtZW50KFZCdG4sIHsKICAgICAgICAgIHN0YXRpY0NsYXNzOiAndi1jYXJvdXNlbF9fY29udHJvbHNfX2l0ZW0nLAogICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgJ2FyaWEtbGFiZWwnOiB0aGlzLiR2dWV0aWZ5LmxhbmcudCgnJHZ1ZXRpZnkuY2Fyb3VzZWwuYXJpYUxhYmVsLmRlbGltaXRlcicsIGkgKyAxLCBsZW5ndGgpCiAgICAgICAgICB9LAogICAgICAgICAgcHJvcHM6IHsKICAgICAgICAgICAgaWNvbjogdHJ1ZSwKICAgICAgICAgICAgc21hbGw6IHRydWUsCiAgICAgICAgICAgIHZhbHVlOiB0aGlzLmdldFZhbHVlKHRoaXMuaXRlbXNbaV0sIGkpCiAgICAgICAgICB9CiAgICAgICAgfSwgW3RoaXMuJGNyZWF0ZUVsZW1lbnQoVkljb24sIHsKICAgICAgICAgIHByb3BzOiB7CiAgICAgICAgICAgIHNpemU6IDE4CiAgICAgICAgICB9CiAgICAgICAgfSwgdGhpcy5kZWxpbWl0ZXJJY29uKV0pOwogICAgICAgIGNoaWxkcmVuLnB1c2goY2hpbGQpOwogICAgICB9CgogICAgICByZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudChCdXR0b25Hcm91cCwgewogICAgICAgIHByb3BzOiB7CiAgICAgICAgICB2YWx1ZTogdGhpcy5pbnRlcm5hbFZhbHVlLAogICAgICAgICAgbWFuZGF0b3J5OiB0aGlzLm1hbmRhdG9yeQogICAgICAgIH0sCiAgICAgICAgb246IHsKICAgICAgICAgIGNoYW5nZTogZnVuY3Rpb24gY2hhbmdlKHZhbCkgewogICAgICAgICAgICBfdGhpcy5pbnRlcm5hbFZhbHVlID0gdmFsOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgY2hpbGRyZW4pOwogICAgfSwKICAgIGdlblByb2dyZXNzOiBmdW5jdGlvbiBnZW5Qcm9ncmVzcygpIHsKICAgICAgcmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoVlByb2dyZXNzTGluZWFyLCB7CiAgICAgICAgc3RhdGljQ2xhc3M6ICd2LWNhcm91c2VsX19wcm9ncmVzcycsCiAgICAgICAgcHJvcHM6IHsKICAgICAgICAgIGNvbG9yOiB0aGlzLnByb2dyZXNzQ29sb3IsCiAgICAgICAgICB2YWx1ZTogKHRoaXMuaW50ZXJuYWxJbmRleCArIDEpIC8gdGhpcy5pdGVtcy5sZW5ndGggKiAxMDAKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIHJlc3RhcnRUaW1lb3V0OiBmdW5jdGlvbiByZXN0YXJ0VGltZW91dCgpIHsKICAgICAgdGhpcy5zbGlkZVRpbWVvdXQgJiYgY2xlYXJUaW1lb3V0KHRoaXMuc2xpZGVUaW1lb3V0KTsKICAgICAgdGhpcy5zbGlkZVRpbWVvdXQgPSB1bmRlZmluZWQ7CiAgICAgIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUodGhpcy5zdGFydFRpbWVvdXQpOwogICAgfSwKICAgIHN0YXJ0VGltZW91dDogZnVuY3Rpb24gc3RhcnRUaW1lb3V0KCkgewogICAgICBpZiAoIXRoaXMuY3ljbGUpIHJldHVybjsKICAgICAgdGhpcy5zbGlkZVRpbWVvdXQgPSB3aW5kb3cuc2V0VGltZW91dCh0aGlzLm5leHQsICt0aGlzLmludGVydmFsID4gMCA/ICt0aGlzLmludGVydmFsIDogNjAwMCk7CiAgICB9CiAgfSwKICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihoKSB7CiAgICB2YXIgcmVuZGVyID0gVldpbmRvdy5vcHRpb25zLnJlbmRlci5jYWxsKHRoaXMsIGgpOwogICAgcmVuZGVyLmRhdGEuc3R5bGUgPSAiaGVpZ2h0OiAiLmNvbmNhdChjb252ZXJ0VG9Vbml0KHRoaXMuaGVpZ2h0KSwgIjsiKTsKICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBlbHNlICovCgogICAgaWYgKCF0aGlzLmhpZGVEZWxpbWl0ZXJzKSB7CiAgICAgIHJlbmRlci5jaGlsZHJlbi5wdXNoKHRoaXMuZ2VuRGVsaW1pdGVycygpKTsKICAgIH0KICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBlbHNlICovCgoKICAgIGlmICh0aGlzLnByb2dyZXNzIHx8IHRoaXMucHJvZ3Jlc3NDb2xvcikgewogICAgICByZW5kZXIuY2hpbGRyZW4ucHVzaCh0aGlzLmdlblByb2dyZXNzKCkpOwogICAgfQoKICAgIHJldHVybiByZW5kZXI7CiAgfQp9KTs="},null]}
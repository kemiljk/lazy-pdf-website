{"remainingRequest":"/Users/karlkoch/GitHub/lazy-pdf-website/node_modules/thread-loader/dist/cjs.js!/Users/karlkoch/GitHub/lazy-pdf-website/node_modules/babel-loader/lib/index.js!/Users/karlkoch/GitHub/lazy-pdf-website/node_modules/vuetify/lib/components/VToolbar/VToolbar.js","dependencies":[{"path":"/Users/karlkoch/GitHub/lazy-pdf-website/node_modules/vuetify/lib/components/VToolbar/VToolbar.js","mtime":1585839637415},{"path":"/Users/karlkoch/GitHub/lazy-pdf-website/node_modules/cache-loader/dist/cjs.js","mtime":1583312604768},{"path":"/Users/karlkoch/GitHub/lazy-pdf-website/node_modules/thread-loader/dist/cjs.js","mtime":1583312604800},{"path":"/Users/karlkoch/GitHub/lazy-pdf-website/node_modules/babel-loader/lib/index.js","mtime":1585087070436}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmxhdCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZvci1lYWNoIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkudW5zY29wYWJsZXMuZmxhdCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5jb25zdHJ1Y3RvciI7CmltcG9ydCBfc2xpY2VkVG9BcnJheSBmcm9tICIvVXNlcnMva2FybGtvY2gvR2l0SHViL2xhenktcGRmLXdlYnNpdGUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3NsaWNlZFRvQXJyYXkiOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICIvVXNlcnMva2FybGtvY2gvR2l0SHViL2xhenktcGRmLXdlYnNpdGUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwovLyBTdHlsZXMKaW1wb3J0ICIuLi8uLi8uLi9zcmMvY29tcG9uZW50cy9WVG9vbGJhci9WVG9vbGJhci5zYXNzIjsgLy8gRXh0ZW5zaW9ucwoKaW1wb3J0IFZTaGVldCBmcm9tICcuLi9WU2hlZXQvVlNoZWV0JzsgLy8gQ29tcG9uZW50cwoKaW1wb3J0IFZJbWcgZnJvbSAnLi4vVkltZy9WSW1nJzsgLy8gVXRpbGl0aWVzCgppbXBvcnQgeyBjb252ZXJ0VG9Vbml0LCBnZXRTbG90IH0gZnJvbSAnLi4vLi4vdXRpbC9oZWxwZXJzJzsKaW1wb3J0IHsgYnJlYWtpbmcgfSBmcm9tICcuLi8uLi91dGlsL2NvbnNvbGUnOwovKiBAdnVlL2NvbXBvbmVudCAqLwoKZXhwb3J0IGRlZmF1bHQgVlNoZWV0LmV4dGVuZCh7CiAgbmFtZTogJ3YtdG9vbGJhcicsCiAgcHJvcHM6IHsKICAgIGFic29sdXRlOiBCb29sZWFuLAogICAgYm90dG9tOiBCb29sZWFuLAogICAgY29sbGFwc2U6IEJvb2xlYW4sCiAgICBkZW5zZTogQm9vbGVhbiwKICAgIGV4dGVuZGVkOiBCb29sZWFuLAogICAgZXh0ZW5zaW9uSGVpZ2h0OiB7CiAgICAgIGRlZmF1bHQ6IDQ4LAogICAgICB0eXBlOiBbTnVtYmVyLCBTdHJpbmddCiAgICB9LAogICAgZmxhdDogQm9vbGVhbiwKICAgIGZsb2F0aW5nOiBCb29sZWFuLAogICAgcHJvbWluZW50OiBCb29sZWFuLAogICAgc2hvcnQ6IEJvb2xlYW4sCiAgICBzcmM6IHsKICAgICAgdHlwZTogW1N0cmluZywgT2JqZWN0XSwKICAgICAgZGVmYXVsdDogJycKICAgIH0sCiAgICB0YWc6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnaGVhZGVyJwogICAgfSwKICAgIHRpbGU6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogdHJ1ZQogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGlzRXh0ZW5kZWQ6IGZhbHNlCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGNvbXB1dGVkSGVpZ2h0OiBmdW5jdGlvbiBjb21wdXRlZEhlaWdodCgpIHsKICAgICAgdmFyIGhlaWdodCA9IHRoaXMuY29tcHV0ZWRDb250ZW50SGVpZ2h0OwogICAgICBpZiAoIXRoaXMuaXNFeHRlbmRlZCkgcmV0dXJuIGhlaWdodDsKICAgICAgdmFyIGV4dGVuc2lvbkhlaWdodCA9IHBhcnNlSW50KHRoaXMuZXh0ZW5zaW9uSGVpZ2h0KTsKICAgICAgcmV0dXJuIHRoaXMuaXNDb2xsYXBzZWQgPyBoZWlnaHQgOiBoZWlnaHQgKyAoIWlzTmFOKGV4dGVuc2lvbkhlaWdodCkgPyBleHRlbnNpb25IZWlnaHQgOiAwKTsKICAgIH0sCiAgICBjb21wdXRlZENvbnRlbnRIZWlnaHQ6IGZ1bmN0aW9uIGNvbXB1dGVkQ29udGVudEhlaWdodCgpIHsKICAgICAgaWYgKHRoaXMuaGVpZ2h0KSByZXR1cm4gcGFyc2VJbnQodGhpcy5oZWlnaHQpOwogICAgICBpZiAodGhpcy5pc1Byb21pbmVudCAmJiB0aGlzLmRlbnNlKSByZXR1cm4gOTY7CiAgICAgIGlmICh0aGlzLmlzUHJvbWluZW50ICYmIHRoaXMuc2hvcnQpIHJldHVybiAxMTI7CiAgICAgIGlmICh0aGlzLmlzUHJvbWluZW50KSByZXR1cm4gMTI4OwogICAgICBpZiAodGhpcy5kZW5zZSkgcmV0dXJuIDQ4OwogICAgICBpZiAodGhpcy5zaG9ydCB8fCB0aGlzLiR2dWV0aWZ5LmJyZWFrcG9pbnQuc21BbmREb3duKSByZXR1cm4gNTY7CiAgICAgIHJldHVybiA2NDsKICAgIH0sCiAgICBjbGFzc2VzOiBmdW5jdGlvbiBjbGFzc2VzKCkgewogICAgICByZXR1cm4gX29iamVjdFNwcmVhZCh7fSwgVlNoZWV0Lm9wdGlvbnMuY29tcHV0ZWQuY2xhc3Nlcy5jYWxsKHRoaXMpLCB7CiAgICAgICAgJ3YtdG9vbGJhcic6IHRydWUsCiAgICAgICAgJ3YtdG9vbGJhci0tYWJzb2x1dGUnOiB0aGlzLmFic29sdXRlLAogICAgICAgICd2LXRvb2xiYXItLWJvdHRvbSc6IHRoaXMuYm90dG9tLAogICAgICAgICd2LXRvb2xiYXItLWNvbGxhcHNlJzogdGhpcy5jb2xsYXBzZSwKICAgICAgICAndi10b29sYmFyLS1jb2xsYXBzZWQnOiB0aGlzLmlzQ29sbGFwc2VkLAogICAgICAgICd2LXRvb2xiYXItLWRlbnNlJzogdGhpcy5kZW5zZSwKICAgICAgICAndi10b29sYmFyLS1leHRlbmRlZCc6IHRoaXMuaXNFeHRlbmRlZCwKICAgICAgICAndi10b29sYmFyLS1mbGF0JzogdGhpcy5mbGF0LAogICAgICAgICd2LXRvb2xiYXItLWZsb2F0aW5nJzogdGhpcy5mbG9hdGluZywKICAgICAgICAndi10b29sYmFyLS1wcm9taW5lbnQnOiB0aGlzLmlzUHJvbWluZW50CiAgICAgIH0pOwogICAgfSwKICAgIGlzQ29sbGFwc2VkOiBmdW5jdGlvbiBpc0NvbGxhcHNlZCgpIHsKICAgICAgcmV0dXJuIHRoaXMuY29sbGFwc2U7CiAgICB9LAogICAgaXNQcm9taW5lbnQ6IGZ1bmN0aW9uIGlzUHJvbWluZW50KCkgewogICAgICByZXR1cm4gdGhpcy5wcm9taW5lbnQ7CiAgICB9LAogICAgc3R5bGVzOiBmdW5jdGlvbiBzdHlsZXMoKSB7CiAgICAgIHJldHVybiBfb2JqZWN0U3ByZWFkKHt9LCB0aGlzLm1lYXN1cmFibGVTdHlsZXMsIHsKICAgICAgICBoZWlnaHQ6IGNvbnZlcnRUb1VuaXQodGhpcy5jb21wdXRlZEhlaWdodCkKICAgICAgfSk7CiAgICB9CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICB2YXIgYnJlYWtpbmdQcm9wcyA9IFtbJ2FwcCcsICc8di1hcHAtYmFyIGFwcD4nXSwgWydtYW51YWwtc2Nyb2xsJywgJzx2LWFwcC1iYXIgOnZhbHVlPSJmYWxzZSI+J10sIFsnY2xpcHBlZC1sZWZ0JywgJzx2LWFwcC1iYXIgY2xpcHBlZC1sZWZ0PiddLCBbJ2NsaXBwZWQtcmlnaHQnLCAnPHYtYXBwLWJhciBjbGlwcGVkLXJpZ2h0PiddLCBbJ2ludmVydGVkLXNjcm9sbCcsICc8di1hcHAtYmFyIGludmVydGVkLXNjcm9sbD4nXSwgWydzY3JvbGwtb2ZmLXNjcmVlbicsICc8di1hcHAtYmFyIHNjcm9sbC1vZmYtc2NyZWVuPiddLCBbJ3Njcm9sbC10YXJnZXQnLCAnPHYtYXBwLWJhciBzY3JvbGwtdGFyZ2V0PiddLCBbJ3Njcm9sbC10aHJlc2hvbGQnLCAnPHYtYXBwLWJhciBzY3JvbGwtdGhyZXNob2xkPiddLCBbJ2NhcmQnLCAnPHYtYXBwLWJhciBmbGF0PiddXTsKICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovCgogICAgYnJlYWtpbmdQcm9wcy5mb3JFYWNoKGZ1bmN0aW9uIChfcmVmKSB7CiAgICAgIHZhciBfcmVmMiA9IF9zbGljZWRUb0FycmF5KF9yZWYsIDIpLAogICAgICAgICAgb3JpZ2luYWwgPSBfcmVmMlswXSwKICAgICAgICAgIHJlcGxhY2VtZW50ID0gX3JlZjJbMV07CgogICAgICBpZiAoX3RoaXMuJGF0dHJzLmhhc093blByb3BlcnR5KG9yaWdpbmFsKSkgYnJlYWtpbmcob3JpZ2luYWwsIHJlcGxhY2VtZW50LCBfdGhpcyk7CiAgICB9KTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGdlbkJhY2tncm91bmQ6IGZ1bmN0aW9uIGdlbkJhY2tncm91bmQoKSB7CiAgICAgIHZhciBwcm9wcyA9IHsKICAgICAgICBoZWlnaHQ6IGNvbnZlcnRUb1VuaXQodGhpcy5jb21wdXRlZEhlaWdodCksCiAgICAgICAgc3JjOiB0aGlzLnNyYwogICAgICB9OwogICAgICB2YXIgaW1hZ2UgPSB0aGlzLiRzY29wZWRTbG90cy5pbWcgPyB0aGlzLiRzY29wZWRTbG90cy5pbWcoewogICAgICAgIHByb3BzOiBwcm9wcwogICAgICB9KSA6IHRoaXMuJGNyZWF0ZUVsZW1lbnQoVkltZywgewogICAgICAgIHByb3BzOiBwcm9wcwogICAgICB9KTsKICAgICAgcmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2RpdicsIHsKICAgICAgICBzdGF0aWNDbGFzczogJ3YtdG9vbGJhcl9faW1hZ2UnCiAgICAgIH0sIFtpbWFnZV0pOwogICAgfSwKICAgIGdlbkNvbnRlbnQ6IGZ1bmN0aW9uIGdlbkNvbnRlbnQoKSB7CiAgICAgIHJldHVybiB0aGlzLiRjcmVhdGVFbGVtZW50KCdkaXYnLCB7CiAgICAgICAgc3RhdGljQ2xhc3M6ICd2LXRvb2xiYXJfX2NvbnRlbnQnLAogICAgICAgIHN0eWxlOiB7CiAgICAgICAgICBoZWlnaHQ6IGNvbnZlcnRUb1VuaXQodGhpcy5jb21wdXRlZENvbnRlbnRIZWlnaHQpCiAgICAgICAgfQogICAgICB9LCBnZXRTbG90KHRoaXMpKTsKICAgIH0sCiAgICBnZW5FeHRlbnNpb246IGZ1bmN0aW9uIGdlbkV4dGVuc2lvbigpIHsKICAgICAgcmV0dXJuIHRoaXMuJGNyZWF0ZUVsZW1lbnQoJ2RpdicsIHsKICAgICAgICBzdGF0aWNDbGFzczogJ3YtdG9vbGJhcl9fZXh0ZW5zaW9uJywKICAgICAgICBzdHlsZTogewogICAgICAgICAgaGVpZ2h0OiBjb252ZXJ0VG9Vbml0KHRoaXMuZXh0ZW5zaW9uSGVpZ2h0KQogICAgICAgIH0KICAgICAgfSwgZ2V0U2xvdCh0aGlzLCAnZXh0ZW5zaW9uJykpOwogICAgfQogIH0sCiAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIoaCkgewogICAgdGhpcy5pc0V4dGVuZGVkID0gdGhpcy5leHRlbmRlZCB8fCAhIXRoaXMuJHNjb3BlZFNsb3RzLmV4dGVuc2lvbjsKICAgIHZhciBjaGlsZHJlbiA9IFt0aGlzLmdlbkNvbnRlbnQoKV07CiAgICB2YXIgZGF0YSA9IHRoaXMuc2V0QmFja2dyb3VuZENvbG9yKHRoaXMuY29sb3IsIHsKICAgICAgY2xhc3M6IHRoaXMuY2xhc3NlcywKICAgICAgc3R5bGU6IHRoaXMuc3R5bGVzLAogICAgICBvbjogdGhpcy4kbGlzdGVuZXJzCiAgICB9KTsKICAgIGlmICh0aGlzLmlzRXh0ZW5kZWQpIGNoaWxkcmVuLnB1c2godGhpcy5nZW5FeHRlbnNpb24oKSk7CiAgICBpZiAodGhpcy5zcmMgfHwgdGhpcy4kc2NvcGVkU2xvdHMuaW1nKSBjaGlsZHJlbi51bnNoaWZ0KHRoaXMuZ2VuQmFja2dyb3VuZCgpKTsKICAgIHJldHVybiBoKHRoaXMudGFnLCBkYXRhLCBjaGlsZHJlbik7CiAgfQp9KTs="},null]}
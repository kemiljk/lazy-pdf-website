{"remainingRequest":"/Users/karlkoch/GitHub/lazy-pdf-website/node_modules/thread-loader/dist/cjs.js!/Users/karlkoch/GitHub/lazy-pdf-website/node_modules/babel-loader/lib/index.js!/Users/karlkoch/GitHub/lazy-pdf-website/node_modules/vuetify/lib/mixins/overlayable/index.js","dependencies":[{"path":"/Users/karlkoch/GitHub/lazy-pdf-website/node_modules/vuetify/lib/mixins/overlayable/index.js","mtime":1585839637415},{"path":"/Users/karlkoch/GitHub/lazy-pdf-website/node_modules/cache-loader/dist/cjs.js","mtime":1583312604768},{"path":"/Users/karlkoch/GitHub/lazy-pdf-website/node_modules/thread-loader/dist/cjs.js","mtime":1583312604800},{"path":"/Users/karlkoch/GitHub/lazy-pdf-website/node_modules/babel-loader/lib/index.js","mtime":1585087070436}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIuY29uc3RydWN0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaW5jbHVkZXMiOwovLyBDb21wb25lbnRzCmltcG9ydCBWT3ZlcmxheSBmcm9tICcuLi8uLi9jb21wb25lbnRzL1ZPdmVybGF5JzsgLy8gVXRpbGl0aWVzCgppbXBvcnQgeyBrZXlDb2RlcywgYWRkT25jZUV2ZW50TGlzdGVuZXIsIGFkZFBhc3NpdmVFdmVudExpc3RlbmVyLCBnZXRaSW5kZXggfSBmcm9tICcuLi8uLi91dGlsL2hlbHBlcnMnOyAvLyBUeXBlcwoKaW1wb3J0IFZ1ZSBmcm9tICd2dWUnOwovKiBAdnVlL2NvbXBvbmVudCAqLwoKZXhwb3J0IGRlZmF1bHQgVnVlLmV4dGVuZCgpLmV4dGVuZCh7CiAgbmFtZTogJ292ZXJsYXlhYmxlJywKICBwcm9wczogewogICAgaGlkZU92ZXJsYXk6IEJvb2xlYW4sCiAgICBvdmVybGF5Q29sb3I6IFN0cmluZywKICAgIG92ZXJsYXlPcGFjaXR5OiBbTnVtYmVyLCBTdHJpbmddCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgb3ZlcmxheTogbnVsbAogICAgfTsKICB9LAogIHdhdGNoOiB7CiAgICBoaWRlT3ZlcmxheTogZnVuY3Rpb24gaGlkZU92ZXJsYXkodmFsdWUpIHsKICAgICAgaWYgKCF0aGlzLmlzQWN0aXZlKSByZXR1cm47CiAgICAgIGlmICh2YWx1ZSkgdGhpcy5yZW1vdmVPdmVybGF5KCk7ZWxzZSB0aGlzLmdlbk92ZXJsYXkoKTsKICAgIH0KICB9LAogIGJlZm9yZURlc3Ryb3k6IGZ1bmN0aW9uIGJlZm9yZURlc3Ryb3koKSB7CiAgICB0aGlzLnJlbW92ZU92ZXJsYXkoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGNyZWF0ZU92ZXJsYXk6IGZ1bmN0aW9uIGNyZWF0ZU92ZXJsYXkoKSB7CiAgICAgIHZhciBvdmVybGF5ID0gbmV3IFZPdmVybGF5KHsKICAgICAgICBwcm9wc0RhdGE6IHsKICAgICAgICAgIGFic29sdXRlOiB0aGlzLmFic29sdXRlLAogICAgICAgICAgdmFsdWU6IGZhbHNlLAogICAgICAgICAgY29sb3I6IHRoaXMub3ZlcmxheUNvbG9yLAogICAgICAgICAgb3BhY2l0eTogdGhpcy5vdmVybGF5T3BhY2l0eQogICAgICAgIH0KICAgICAgfSk7CiAgICAgIG92ZXJsYXkuJG1vdW50KCk7CiAgICAgIHZhciBwYXJlbnQgPSB0aGlzLmFic29sdXRlID8gdGhpcy4kZWwucGFyZW50Tm9kZSA6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLWFwcF0nKTsKICAgICAgcGFyZW50ICYmIHBhcmVudC5pbnNlcnRCZWZvcmUob3ZlcmxheS4kZWwsIHBhcmVudC5maXJzdENoaWxkKTsKICAgICAgdGhpcy5vdmVybGF5ID0gb3ZlcmxheTsKICAgIH0sCiAgICBnZW5PdmVybGF5OiBmdW5jdGlvbiBnZW5PdmVybGF5KCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdGhpcy5oaWRlU2Nyb2xsKCk7CiAgICAgIGlmICh0aGlzLmhpZGVPdmVybGF5KSByZXR1cm47CiAgICAgIGlmICghdGhpcy5vdmVybGF5KSB0aGlzLmNyZWF0ZU92ZXJsYXkoKTsKICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKGZ1bmN0aW9uICgpIHsKICAgICAgICBpZiAoIV90aGlzLm92ZXJsYXkpIHJldHVybjsKCiAgICAgICAgaWYgKF90aGlzLmFjdGl2ZVpJbmRleCAhPT0gdW5kZWZpbmVkKSB7CiAgICAgICAgICBfdGhpcy5vdmVybGF5LnpJbmRleCA9IFN0cmluZyhfdGhpcy5hY3RpdmVaSW5kZXggLSAxKTsKICAgICAgICB9IGVsc2UgaWYgKF90aGlzLiRlbCkgewogICAgICAgICAgX3RoaXMub3ZlcmxheS56SW5kZXggPSBnZXRaSW5kZXgoX3RoaXMuJGVsKTsKICAgICAgICB9CgogICAgICAgIF90aGlzLm92ZXJsYXkudmFsdWUgPSB0cnVlOwogICAgICB9KTsKICAgICAgcmV0dXJuIHRydWU7CiAgICB9LAoKICAgIC8qKiByZW1vdmVPdmVybGF5KGZhbHNlKSB3aWxsIG5vdCByZXN0b3JlIHRoZSBzY29sbGJhciBhZnRlcndhcmRzICovCiAgICByZW1vdmVPdmVybGF5OiBmdW5jdGlvbiByZW1vdmVPdmVybGF5KCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHZhciBzaG93U2Nyb2xsID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiB0cnVlOwoKICAgICAgaWYgKHRoaXMub3ZlcmxheSkgewogICAgICAgIGFkZE9uY2VFdmVudExpc3RlbmVyKHRoaXMub3ZlcmxheS4kZWwsICd0cmFuc2l0aW9uZW5kJywgZnVuY3Rpb24gKCkgewogICAgICAgICAgaWYgKCFfdGhpczIub3ZlcmxheSB8fCAhX3RoaXMyLm92ZXJsYXkuJGVsIHx8ICFfdGhpczIub3ZlcmxheS4kZWwucGFyZW50Tm9kZSB8fCBfdGhpczIub3ZlcmxheS52YWx1ZSkgcmV0dXJuOwoKICAgICAgICAgIF90aGlzMi5vdmVybGF5LiRlbC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKF90aGlzMi5vdmVybGF5LiRlbCk7CgogICAgICAgICAgX3RoaXMyLm92ZXJsYXkuJGRlc3Ryb3koKTsKCiAgICAgICAgICBfdGhpczIub3ZlcmxheSA9IG51bGw7CiAgICAgICAgfSk7CiAgICAgICAgdGhpcy5vdmVybGF5LnZhbHVlID0gZmFsc2U7CiAgICAgIH0KCiAgICAgIHNob3dTY3JvbGwgJiYgdGhpcy5zaG93U2Nyb2xsKCk7CiAgICB9LAogICAgc2Nyb2xsTGlzdGVuZXI6IGZ1bmN0aW9uIHNjcm9sbExpc3RlbmVyKGUpIHsKICAgICAgaWYgKGUudHlwZSA9PT0gJ2tleWRvd24nKSB7CiAgICAgICAgaWYgKFsnSU5QVVQnLCAnVEVYVEFSRUEnLCAnU0VMRUNUJ10uaW5jbHVkZXMoZS50YXJnZXQudGFnTmFtZSkgfHwgLy8gaHR0cHM6Ly9naXRodWIuY29tL3Z1ZXRpZnlqcy92dWV0aWZ5L2lzc3Vlcy80NzE1CiAgICAgICAgZS50YXJnZXQuaXNDb250ZW50RWRpdGFibGUpIHJldHVybjsKICAgICAgICB2YXIgdXAgPSBba2V5Q29kZXMudXAsIGtleUNvZGVzLnBhZ2V1cF07CiAgICAgICAgdmFyIGRvd24gPSBba2V5Q29kZXMuZG93biwga2V5Q29kZXMucGFnZWRvd25dOwoKICAgICAgICBpZiAodXAuaW5jbHVkZXMoZS5rZXlDb2RlKSkgewogICAgICAgICAgZS5kZWx0YVkgPSAtMTsKICAgICAgICB9IGVsc2UgaWYgKGRvd24uaW5jbHVkZXMoZS5rZXlDb2RlKSkgewogICAgICAgICAgZS5kZWx0YVkgPSAxOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICByZXR1cm47CiAgICAgICAgfQogICAgICB9CgogICAgICBpZiAoZS50YXJnZXQgPT09IHRoaXMub3ZlcmxheSB8fCBlLnR5cGUgIT09ICdrZXlkb3duJyAmJiBlLnRhcmdldCA9PT0gZG9jdW1lbnQuYm9keSB8fCB0aGlzLmNoZWNrUGF0aChlKSkgZS5wcmV2ZW50RGVmYXVsdCgpOwogICAgfSwKICAgIGhhc1Njcm9sbGJhcjogZnVuY3Rpb24gaGFzU2Nyb2xsYmFyKGVsKSB7CiAgICAgIGlmICghZWwgfHwgZWwubm9kZVR5cGUgIT09IE5vZGUuRUxFTUVOVF9OT0RFKSByZXR1cm4gZmFsc2U7CiAgICAgIHZhciBzdHlsZSA9IHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGVsKTsKICAgICAgcmV0dXJuIFsnYXV0bycsICdzY3JvbGwnXS5pbmNsdWRlcyhzdHlsZS5vdmVyZmxvd1kpICYmIGVsLnNjcm9sbEhlaWdodCA+IGVsLmNsaWVudEhlaWdodDsKICAgIH0sCiAgICBzaG91bGRTY3JvbGw6IGZ1bmN0aW9uIHNob3VsZFNjcm9sbChlbCwgZGVsdGEpIHsKICAgICAgaWYgKGVsLnNjcm9sbFRvcCA9PT0gMCAmJiBkZWx0YSA8IDApIHJldHVybiB0cnVlOwogICAgICByZXR1cm4gZWwuc2Nyb2xsVG9wICsgZWwuY2xpZW50SGVpZ2h0ID09PSBlbC5zY3JvbGxIZWlnaHQgJiYgZGVsdGEgPiAwOwogICAgfSwKICAgIGlzSW5zaWRlOiBmdW5jdGlvbiBpc0luc2lkZShlbCwgcGFyZW50KSB7CiAgICAgIGlmIChlbCA9PT0gcGFyZW50KSB7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgIH0gZWxzZSBpZiAoZWwgPT09IG51bGwgfHwgZWwgPT09IGRvY3VtZW50LmJvZHkpIHsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIHRoaXMuaXNJbnNpZGUoZWwucGFyZW50Tm9kZSwgcGFyZW50KTsKICAgICAgfQogICAgfSwKICAgIGNoZWNrUGF0aDogZnVuY3Rpb24gY2hlY2tQYXRoKGUpIHsKICAgICAgdmFyIHBhdGggPSBlLnBhdGggfHwgdGhpcy5jb21wb3NlZFBhdGgoZSk7CiAgICAgIHZhciBkZWx0YSA9IGUuZGVsdGFZOwoKICAgICAgaWYgKGUudHlwZSA9PT0gJ2tleWRvd24nICYmIHBhdGhbMF0gPT09IGRvY3VtZW50LmJvZHkpIHsKICAgICAgICB2YXIgZGlhbG9nID0gdGhpcy4kcmVmcy5kaWFsb2c7IC8vIGdldFNlbGVjdGlvbiByZXR1cm5zIG51bGwgaW4gZmlyZWZveCBpbiBzb21lIGVkZ2UgY2FzZXMsIGNhbiBiZSBpZ25vcmVkCgogICAgICAgIHZhciBzZWxlY3RlZCA9IHdpbmRvdy5nZXRTZWxlY3Rpb24oKS5hbmNob3JOb2RlOwoKICAgICAgICBpZiAoZGlhbG9nICYmIHRoaXMuaGFzU2Nyb2xsYmFyKGRpYWxvZykgJiYgdGhpcy5pc0luc2lkZShzZWxlY3RlZCwgZGlhbG9nKSkgewogICAgICAgICAgcmV0dXJuIHRoaXMuc2hvdWxkU2Nyb2xsKGRpYWxvZywgZGVsdGEpOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgIH0KCiAgICAgIGZvciAodmFyIGluZGV4ID0gMDsgaW5kZXggPCBwYXRoLmxlbmd0aDsgaW5kZXgrKykgewogICAgICAgIHZhciBlbCA9IHBhdGhbaW5kZXhdOwogICAgICAgIGlmIChlbCA9PT0gZG9jdW1lbnQpIHJldHVybiB0cnVlOwogICAgICAgIGlmIChlbCA9PT0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50KSByZXR1cm4gdHJ1ZTsKICAgICAgICBpZiAoZWwgPT09IHRoaXMuJHJlZnMuY29udGVudCkgcmV0dXJuIHRydWU7CiAgICAgICAgaWYgKHRoaXMuaGFzU2Nyb2xsYmFyKGVsKSkgcmV0dXJuIHRoaXMuc2hvdWxkU2Nyb2xsKGVsLCBkZWx0YSk7CiAgICAgIH0KCiAgICAgIHJldHVybiB0cnVlOwogICAgfSwKCiAgICAvKioKICAgICAqIFBvbHlmaWxsIGZvciBFdmVudC5wcm90b3R5cGUuY29tcG9zZWRQYXRoCiAgICAgKi8KICAgIGNvbXBvc2VkUGF0aDogZnVuY3Rpb24gY29tcG9zZWRQYXRoKGUpIHsKICAgICAgaWYgKGUuY29tcG9zZWRQYXRoKSByZXR1cm4gZS5jb21wb3NlZFBhdGgoKTsKICAgICAgdmFyIHBhdGggPSBbXTsKICAgICAgdmFyIGVsID0gZS50YXJnZXQ7CgogICAgICB3aGlsZSAoZWwpIHsKICAgICAgICBwYXRoLnB1c2goZWwpOwoKICAgICAgICBpZiAoZWwudGFnTmFtZSA9PT0gJ0hUTUwnKSB7CiAgICAgICAgICBwYXRoLnB1c2goZG9jdW1lbnQpOwogICAgICAgICAgcGF0aC5wdXNoKHdpbmRvdyk7CiAgICAgICAgICByZXR1cm4gcGF0aDsKICAgICAgICB9CgogICAgICAgIGVsID0gZWwucGFyZW50RWxlbWVudDsKICAgICAgfQoKICAgICAgcmV0dXJuIHBhdGg7CiAgICB9LAogICAgaGlkZVNjcm9sbDogZnVuY3Rpb24gaGlkZVNjcm9sbCgpIHsKICAgICAgaWYgKHRoaXMuJHZ1ZXRpZnkuYnJlYWtwb2ludC5zbUFuZERvd24pIHsKICAgICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xhc3NMaXN0LmFkZCgnb3ZlcmZsb3cteS1oaWRkZW4nKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBhZGRQYXNzaXZlRXZlbnRMaXN0ZW5lcih3aW5kb3csICd3aGVlbCcsIHRoaXMuc2Nyb2xsTGlzdGVuZXIsIHsKICAgICAgICAgIHBhc3NpdmU6IGZhbHNlCiAgICAgICAgfSk7CiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLnNjcm9sbExpc3RlbmVyKTsKICAgICAgfQogICAgfSwKICAgIHNob3dTY3JvbGw6IGZ1bmN0aW9uIHNob3dTY3JvbGwoKSB7CiAgICAgIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKCdvdmVyZmxvdy15LWhpZGRlbicpOwogICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcignd2hlZWwnLCB0aGlzLnNjcm9sbExpc3RlbmVyKTsKICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLnNjcm9sbExpc3RlbmVyKTsKICAgIH0KICB9Cn0pOw=="},null]}